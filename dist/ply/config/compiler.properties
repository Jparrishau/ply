# where to place the compiled files.
build.path=${project.build.dir}/classes
# where to place generated source files (i.e., files automatically generated as part of the build process)
generated.src.path=${build.path}
# where to place the class dependencies files.
class.deps=${project.build.dir}/classdeps
# true to include debug information in the compiled files.
debug=true
# true to print messages from the concrete compiler.
verbose=false
# true to optimize the compiled code using the concrete compiler's optimization mechanisms
optimize=true
# true to show concrete compiler's warning messages (see java.warningsLevel for configuration of
# which warnings are displayed).
warnings=true
# the -source argument for the java compiler, note only 1.6+ is supported.
# null implies value of System.getProperty("java.version")
java.source=
# the -target argument for the java compiler, note only 1.6+ is supported.
# null implies value of System.getProperty("java.version")
java.target=
# a comma delimited list of warning names (which may be prefaced with a '-' to indicate disabling). 
# for a complete list of available names for 1.6 see xlint warnings here:
# http://download.oracle.com/javase/6/docs/technotes/tools/solaris/javac.html
# and for 1.7 see http://download.oracle.com/javase/7/docs/technotes/tools/solaris/javac.html#xlintwarnings
# If 'warnings' property is false, this property is irrelevant.
# set to 'all' so that 'ply config --compiler append java.warningsLevel -serial' does the 
# expected thing (show all warnings except serial).
java.warningsLevel=all
# true to output deprecation warnings in the java compiler
java.deprecation=false
# the source file encoding
# null will result in the platform encoding
java.encoding=
# comma-separated list of levels to be appended to the '-g' debug switch for the java compiler.  
# valid levels are 'lines', 'vars', 'source'.  
# if 'debug' property is false, this property is irrelevant.
java.debugLevel=
# either 'none' or 'only' see javac "-proc:" option for details
# null will be ignored
java.proc=
# the path for which to search for annotation processors
# null will be ignored
java.processorpath=
# explicitly defined class names (separated by commas) of annotation processors
# null will be ignored
java.processor=
# see "-implicit:" option for details
# null will be ignored
java.implicit=
# to specify java annotation keys (see -A in javac) simply provide properties named java.Akey=value
# e.g. to provide the following javac option "-Afoo=bar" you'd make a property here "java.Afoo=bar"
